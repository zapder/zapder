---
import Layout from './Layout.astro';

export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<Layout title={title}>
  <a href="/" class="flex items-center ml-4 mt-2 sm:hidden">
    <img src="/favicon.svg" class="h-6 mr-3 sm:h-7" alt="Flowbite Logo" />
    <span class="self-center text-xl font-semibold whitespace-nowrap dark:text-white">Zapder</span>
  </a>

  <button
    data-drawer-target="default-sidebar"
    data-drawer-toggle="default-sidebar"
    aria-controls="default-sidebar"
    type="button"
    class="inline-flex items-center p-2 mt-2 ml-3 text-sm text-gray-500 rounded-lg sm:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
  >
    <span class="sr-only">Open sidebar</span>
    <svg class="w-6 h-6" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
      <path
        clip-rule="evenodd"
        fill-rule="evenodd"
        d="M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z"
      ></path>
    </svg>
  </button>

  <aside
    id="default-sidebar"
    class="fixed top-0 left-0 z-40 w-64 h-screen transition-transform -translate-x-full sm:translate-x-0"
    aria-label="Sidebar"
  >
    <div class="border-r h-full px-3 py-4 overflow-y-auto bg-gray-50 dark:bg-gray-800">
      <ul class="space-y-2 font-medium">
        <a href="/" class="flex items-center pl-2.5 mb-5">
          <img src="/favicon.svg" class="h-6 mr-3 sm:h-7" alt="Flowbite Logo" />
          <span class="self-center text-xl font-semibold whitespace-nowrap dark:text-white">Zapder</span>
        </a>
        <li>
          <a href="/" class="flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group">
            <img src="/svg/home.svg" class="w-5 h-5" alt="Zapder Logo" />
            <span class="ml-3">Home</span>
          </a>
        </li>

        <profile-box></profile-box>
      </ul>
    </div>
  </aside>

  <div class="sm:ml-64">
    <slot />
  </div>
</Layout>

<script>
  import { LitElement, html } from 'lit';
  import { customElement, property, state } from 'lit/decorators.js';
  import type { Profile } from '../stores/profile.store';
  import { $profile, checkLogin, logout } from '../stores/profile.store';

  @customElement('profile-box')
  class ProfileBox extends LitElement {
    @property({ type: String })
    public npub: string = '';

    @state()
    private profile: Profile | undefined = undefined;

    @state()
    private isLogin: boolean = false;

    createRenderRoot() {
      return this; // turn off shadow dom to access external styles
    }

    connectedCallback() {
      super.connectedCallback();

      (async () => {
        this.profile = await checkLogin();
      })();
    }

    handleLogoutClick() {
      logout();
      window.location.replace('/');
    }

    render() {
      return this.profile
        ? html`
            <div class="flex absolute bottom-0 left-0 justify-center p-4 w-full">
              <img class="w-10 h-10 rounded-full" src="${this.profile?.picture || '/svg/avatar.svg'}" alt="" />
              <div class="flex ml-3 overflow-hidden">
                <div class="font-medium self-center dark:text-white">${this.profile ? `${this.profile.display_name || this.profile.name}` : ''}</div>
                <img class="w-8 ml-3 cursor-pointer" src="/svg/logout.svg" @click="${this.handleLogoutClick}" />
              </div>
            </div>
          `
        : html`
            <div class="flex absolute bottom-0 left-0 justify-center p-4 w-full">
              <div class="flex ml-3 overflow-hidden">
                <a href="/login"><div class="font-medium self-center dark:text-white" style="cursor: pointer;">Login</div></a>
              </div>
            </div>
          `;
    }
  }
</script>
